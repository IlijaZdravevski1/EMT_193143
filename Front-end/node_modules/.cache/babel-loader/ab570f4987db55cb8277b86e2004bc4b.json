{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\Desktop\\\\Emt-2023-main (1)\\\\Emt-2023-main\\\\front-end\\\\src\\\\Components\\\\App\\\\App.js\";\nimport \"./App.css\";\nimport React from \"react\";\nimport BookService from \"../../repository/repository\";\nimport Book from \"../Book/books\";\nimport BookEdit from \"../Book/BookEdit/bookEdit\";\nimport BookAdd from \"../Book/BookAdd/bookAdd\";\nimport Category from \"../Category/categories\";\nimport Header from \"../Header/header\";\nimport { Suspense } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loadBooks = () => {\n      BookService.fetchBooks().then(resp => {\n        const bookData = resp.data;\n        this.setState({\n          books: bookData\n        });\n      });\n    };\n\n    this.loadCategories = () => {\n      BookService.fetchCategories().then(resp => {\n        this.setState({\n          categories: resp.data\n        });\n      });\n    };\n\n    this.loadAuthors = () => {\n      BookService.fetchAuthors().then(resp => {\n        const respData = resp.data;\n        this.setState({\n          authors: respData\n        });\n      });\n    };\n\n    this.loadCurrentBook = id => {\n      BookService.getCurrentBook(id).then(resp => {\n        this.setState({\n          currentBook: resp.data\n        });\n      });\n    };\n\n    this.editCurrentBook = (id, name, category, author, availableCopies) => {\n      BookService.editCurrentBook(id, name, category, author, availableCopies).then(resp => {\n        this.loadBooks();\n      });\n    };\n\n    this.deleteBook = id => {\n      BookService.deleteCurrentBook(id).then(() => {\n        this.loadBooks();\n      });\n    };\n\n    this.setAvailableCopies = id => {\n      BookService.setAvailableCopies(id).then(() => {\n        this.loadBooks();\n      });\n    };\n\n    this.addBook = (name, category, author, availableCopies) => {\n      BookService.addBook(name, category, author, availableCopies).then(() => {\n        this.loadBooks();\n      });\n    };\n\n    this.state = {\n      books: [],\n      categories: [],\n      authors: [],\n      currentBook: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 29\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/books/edit/:id\",\n            element: /*#__PURE__*/_jsxDEV(BookEdit, {\n              authors: this.state.authors,\n              categories: this.state.categories,\n              currentBook: this.state.currentBook,\n              editCurrentBook: this.editCurrentBook\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/books/add\",\n            element: /*#__PURE__*/_jsxDEV(BookAdd, {\n              categories: this.state.categories,\n              authors: this.state.authors,\n              onAddBook: this.addBook\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/books\",\n            element: /*#__PURE__*/_jsxDEV(Book, {\n              books: this.state.books,\n              getCurrentBook: this.loadCurrentBook,\n              onDeleteCurrentBook: this.deleteBook,\n              currentBook: this.state.currentBook,\n              changeCopiesValue: this.setAvailableCopies\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/categories\",\n            element: /*#__PURE__*/_jsxDEV(Category, {\n              categories: this.state.categories\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Book, {\n              books: this.state.books,\n              getCurrentBook: this.loadCurrentBook,\n              onDeleteCurrentBook: this.deleteBook,\n              currentBook: this.state.currentBook,\n              changeCopiesValue: this.setAvailableCopies\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n  componentDidMount() {\n    this.loadBooks();\n    this.loadCategories();\n    this.loadAuthors();\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Lenovo/OneDrive/Desktop/Emt-2023-main (1)/Emt-2023-main/front-end/src/Components/App/App.js"],"names":["React","BookService","Book","BookEdit","BookAdd","Category","Header","Suspense","BrowserRouter","Router","Routes","Route","App","Component","constructor","props","loadBooks","fetchBooks","then","resp","bookData","data","setState","books","loadCategories","fetchCategories","categories","loadAuthors","fetchAuthors","respData","authors","loadCurrentBook","id","getCurrentBook","currentBook","editCurrentBook","name","category","author","availableCopies","deleteBook","deleteCurrentBook","setAvailableCopies","addBook","state","render","componentDidMount"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport React from \"react\";\nimport BookService from \"../../repository/repository\";\nimport Book from \"../Book/books\";\nimport BookEdit from \"../Book/BookEdit/bookEdit\";\nimport BookAdd from \"../Book/BookAdd/bookAdd\";\nimport Category from \"../Category/categories\";\nimport Header from \"../Header/header\";\n\nimport { Suspense } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      books: [],\n      categories: [],\n      authors: [],\n      currentBook: {},\n    };\n  }\n\n  render() {\n    return (\n      <Router>\n        <Header />\n        <Suspense fallback={<div>Loading...</div>}>\n          <Routes>\n            <Route\n              path=\"/books/edit/:id\"\n              element={\n                <BookEdit\n                  authors={this.state.authors}\n                  categories={this.state.categories}\n                  currentBook={this.state.currentBook}\n                  editCurrentBook={this.editCurrentBook}\n                />\n              }\n            />\n            <Route\n              path=\"/books/add\"\n              element={\n                <BookAdd\n                  categories={this.state.categories}\n                  authors={this.state.authors}\n                  onAddBook={this.addBook}\n                />\n              }\n            />\n            <Route\n              path=\"/books\"\n              element={\n                <Book\n                  books={this.state.books}\n                  getCurrentBook={this.loadCurrentBook}\n                  onDeleteCurrentBook={this.deleteBook}\n                  currentBook={this.state.currentBook}\n                  changeCopiesValue={this.setAvailableCopies}\n                />\n              }\n            />\n            <Route\n              path=\"/categories\"\n              element={<Category categories={this.state.categories} />}\n            />\n            <Route\n              path=\"/\"\n              element={\n                <Book\n                  books={this.state.books}\n                  getCurrentBook={this.loadCurrentBook}\n                  onDeleteCurrentBook={this.deleteBook}\n                  currentBook={this.state.currentBook}\n                  changeCopiesValue={this.setAvailableCopies}\n                />\n              }\n            />\n          </Routes>\n        </Suspense>\n      </Router>\n    );\n  }\n\n  loadBooks = () => {\n    BookService.fetchBooks().then((resp) => {\n      const bookData = resp.data;\n      this.setState({\n        books: bookData,\n      });\n    });\n  };\n\n  loadCategories = () => {\n    BookService.fetchCategories().then((resp) => {\n      this.setState({\n        categories: resp.data,\n      });\n    });\n  };\n\n  loadAuthors = () => {\n    BookService.fetchAuthors().then((resp) => {\n      const respData = resp.data;\n      this.setState({\n        authors: respData,\n      });\n    });\n  };\n\n  loadCurrentBook = (id) => {\n    BookService.getCurrentBook(id).then((resp) => {\n      this.setState({\n        currentBook: resp.data,\n      });\n    });\n  };\n\n  editCurrentBook = (id, name, category, author, availableCopies) => {\n    BookService.editCurrentBook(\n      id,\n      name,\n      category,\n      author,\n      availableCopies\n    ).then((resp) => {\n      this.loadBooks();\n    });\n  };\n\n  deleteBook = (id) => {\n    BookService.deleteCurrentBook(id).then(() => {\n      this.loadBooks();\n    });\n  };\n\n  setAvailableCopies = (id) => {\n    BookService.setAvailableCopies(id).then(() => {\n      this.loadBooks();\n    });\n  };\n\n  addBook = (name, category, author, availableCopies) => {\n    BookService.addBook(name, category, author, availableCopies).then(() => {\n      this.loadBooks();\n    });\n  };\n\n  componentDidMount() {\n    this.loadBooks();\n    this.loadCategories();\n    this.loadAuthors();\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}